name: Release

on:
  push:
    tags:
      - 'v*'

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run tests
        run: pnpm test
        
      - name: Build applications
        run: pnpm build
        
      - name: Create release archive
        run: |
          mkdir -p release
          cp -r apps/frontend/dist release/frontend
          cp -r apps/backend/dist release/backend
          cp -r packages release/
          cp package.json pnpm-workspace.yaml release/
          tar -czf chainquery-ai-${{ github.ref_name }}.tar.gz -C release .
          
      - name: Generate changelog
        id: changelog
        run: |
          echo "## Changes in ${{ github.ref_name }}" > changelog.md
          git log --oneline --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> changelog.md
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          body_path: changelog.md
          files: chainquery-ai-${{ github.ref_name }}.tar.gz
          draft: false
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  deploy-documentation:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Generate API documentation
        run: |
          mkdir -p docs/api
          echo "# ChainQuery AI API Documentation" > docs/api/README.md
          echo "Generated for release ${{ github.ref_name }}" >> docs/api/README.md
          
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
